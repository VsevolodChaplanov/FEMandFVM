#ifndef __FINITE_ELEMENTS_MESH_PARSER__
#define __FINITE_ELEMENTS_MESH_PARSER__

#include <iostream>
#include <algorithm>
#include <string>
#include <fstream>
#include <memory>
#include "FEM_Mesh.hpp"
#include <boost/tokenizer.hpp>
#include <boost/token_iterator.hpp>
#include <boost/algorithm/algorithm.hpp>


// Parses finite elements mesh generated by gmsh
class IFEMParser {
protected:
  std::string filename;
  enum DataType {
    Null,
    POINTS,
    CELLS,
    CELL_TYPES
  };
  DataType state = DataType::Null;
public:
  IFEMParser(const std::string &filename);
  static std::shared_ptr<IFEMParser> Factory(const std::string &filename);
  virtual Mesh load_mesh() = 0;
  virtual ~IFEMParser();
};

// Parses finite elements mesh generated by gmsh in vtk format
class VtkFEMParser : public IFEMParser {
private:
public:
  VtkFEMParser(const std::string &filename);
  Mesh load_mesh() override;
  ~VtkFEMParser();
};


#endif